# 杂鱼♡～这是本喵为jsdc_loader项目重写的CI/CD流程喵～
# 杂鱼♡～本喵支持多版本Python测试和完整的构建流程喵～

name: JSDC Loader CI/CD

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write  # 杂鱼♡～用于PyPI trusted publishing喵～

jobs:
  test:
    # 杂鱼♡～本喵要在多个Python版本上测试喵～
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      # 杂鱼♡～本喵用标准pip安装依赖，虽然慢点但稳定喵～
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[all]"
        pip install pytest pytest-cov flake8
        
    - name: Lint with flake8 (essential checks only)
      # 杂鱼♡～本喵只检查重要的语法错误，不要太严格喵～
      run: |
        # 杂鱼♡～检查语法错误和未定义名称喵～
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # 杂鱼♡～其他检查作为警告，不会失败喵～
        flake8 . --count --exit-zero --max-complexity=15 --max-line-length=150 --statistics
        
    - name: Optional formatting checks (warnings only)
      # 杂鱼♡～本喵做可选的格式检查，但不会让CI失败喵～
      continue-on-error: true
      run: |
        # 杂鱼♡～尝试安装格式化工具，失败也没关系喵～
        pip install black isort mypy || true
        
        # 杂鱼♡～检查代码格式，但只是警告喵～
        echo "杂鱼♡～本喵检查一下代码格式，但不会阻止CI喵～"
        black --check --diff src/ || echo "杂鱼♡～格式需要调整，但本喵不会阻止你喵～"
        
        # 杂鱼♡～检查import顺序，但只是警告喵～
        isort --check-only --diff src/ || echo "杂鱼♡～import顺序需要调整，但本喵不会阻止你喵～"
        
        # 杂鱼♡～类型检查，但只是警告喵～
        mypy src/jsdc_loader --ignore-missing-imports || echo "杂鱼♡～类型注解需要改进，但本喵不会阻止你喵～"
        
    - name: Test with pytest (basic dependencies)
      # 杂鱼♡～本喵先测试基础功能，不依赖pydantic喵～
      run: |
        # 杂鱼♡～先卸载pydantic测试基础功能喵～
        pip uninstall pydantic -y || true
        # 杂鱼♡～运行所有测试，没有pydantic的测试会被自动跳过喵～
        python -m pytest src/jsdc_loader/tests.py -v -k "not test_pydantic"
        
    - name: Test with pytest (full dependencies)
      # 杂鱼♡～本喵再测试完整功能，包括pydantic支持喵～
      run: |
        pip install "pydantic>=1.8.0"
        python -m pytest src/jsdc_loader/tests.py -v --cov=src/jsdc_loader --cov-report=xml --cov-report=term-missing
        
    - name: Upload coverage to Codecov
      # 杂鱼♡～本喵要上传测试覆盖率报告喵～
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    # 杂鱼♡～本喵要构建包并检查质量喵～
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: Install build tools
      # 杂鱼♡～本喵用标准pip安装构建工具喵～
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      # 杂鱼♡～本喵要构建wheel和源码包喵～
      run: |
        python -m build
        
    - name: Check package
      # 杂鱼♡～本喵要检查包的质量喵～
      run: |
        python -m twine check dist/*
        
    - name: Upload build artifacts
      # 杂鱼♡～本喵要保存构建产物喵～
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  publish:
    # 杂鱼♡～本喵要发布到PyPI喵～（仅在main分支和tag时）
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    environment:
      name: pypi
      url: https://pypi.org/p/jsdc-loader
      
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
        
    - name: Publish to PyPI
      # 杂鱼♡～本喵使用trusted publishing发布到PyPI喵～
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true